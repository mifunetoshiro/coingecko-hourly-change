from pycoingecko import CoinGeckoAPI
from colorama import init, Fore, Style
init()
cg = CoinGeckoAPI()

eth = cg.get_coin_market_chart_by_id(id='ethereum', vs_currency='usd', days=1, interval='hourly')
vals = list(eth.values())
price1h = float(str(vals[0][23])[1:-1].split(", ")[1])
price3h = float(str(vals[0][21])[1:-1].split(", ")[1])
price6h = float(str(vals[0][18])[1:-1].split(", ")[1])
price12h = float(str(vals[0][12])[1:-1].split(", ")[1])
price24h = float(str(vals[0][0])[1:-1].split(", ")[1])
price = cg.get_price(ids='ethereum', vs_currencies='usd', include_market_cap=True, include_24hr_vol=False, include_24hr_change=True, include_last_updated_at=False)
vals2 = list(price.values())
usd = str(vals2[0])[1:-1].split(", ")
usd24change = str(vals2[0])[1:-1].split(", ")
usd = float(str(usd[0])[7:])
usd24change = float(str(usd24change[2])[18:])
print("Current ETH price: $" + str(round(usd, 2)))
print("1H change $: " + (Fore.RED + "-" + str(round(price1h - usd, 2)) if price1h > usd else Fore.GREEN + str(round(usd - price1h, 2))) + " " + str(round(((usd - price1h) / price1h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("3H change $: " + (Fore.RED + "-" + str(round(price3h - usd, 2)) if price3h > usd else Fore.GREEN + str(round(usd - price3h, 2))) + " " + str(round(((usd - price3h) / price3h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("6H change $: " + (Fore.RED + "-" + str(round(price6h - usd, 2)) if price6h > usd else Fore.GREEN + str(round(usd - price6h, 2))) + " " + str(round(((usd - price6h) / price6h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("12H change $: " + (Fore.RED + "-" + str(round(price12h - usd, 2)) if price12h > usd else Fore.GREEN + str(round(usd - price12h, 2))) + " " + str(round(((usd - price12h) / price12h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("24H change $: " + (Fore.RED + "-" + str(round(price24h - usd, 2)) if price24h > usd else Fore.GREEN + str(round(usd - price24h, 2))) + " " + str(round(usd24change, 2)) + "%" + Style.RESET_ALL)
print("\n")

btc = cg.get_coin_market_chart_by_id(id='bitcoin', vs_currency='usd', days=1, interval='hourly')
vals = list(btc.values())
price1h = float(str(vals[0][23])[1:-1].split(", ")[1])
price3h = float(str(vals[0][21])[1:-1].split(", ")[1])
price6h = float(str(vals[0][18])[1:-1].split(", ")[1])
price12h = float(str(vals[0][12])[1:-1].split(", ")[1])
price24h = float(str(vals[0][0])[1:-1].split(", ")[1])
price = cg.get_price(ids='bitcoin', vs_currencies='usd', include_market_cap=True, include_24hr_vol=False, include_24hr_change=True, include_last_updated_at=False)
vals2 = list(price.values())
usd = str(vals2[0])[1:-1].split(", ")
usd24change = str(vals2[0])[1:-1].split(", ")
usd = float(str(usd[0])[7:])
usd24change = float(str(usd24change[2])[18:])
print("Current BTC price: $" + str(round(usd, 2)))
print("1H change $: " + (Fore.RED + "-" + str(round(price1h - usd, 2)) if price1h > usd else Fore.GREEN + str(round(usd - price1h, 2))) + " " + str(round(((usd - price1h) / price1h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("3H change $: " + (Fore.RED + "-" + str(round(price3h - usd, 2)) if price3h > usd else Fore.GREEN + str(round(usd - price3h, 2))) + " " + str(round(((usd - price3h) / price3h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("6H change $: " + (Fore.RED + "-" + str(round(price6h - usd, 2)) if price6h > usd else Fore.GREEN + str(round(usd - price6h, 2))) + " " + str(round(((usd - price6h) / price6h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("12H change $: " + (Fore.RED + "-" + str(round(price12h - usd, 2)) if price12h > usd else Fore.GREEN + str(round(usd - price12h, 2))) + " " + str(round(((usd - price12h) / price12h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("24H change $: " + (Fore.RED + "-" + str(round(price24h - usd, 2)) if price24h > usd else Fore.GREEN + str(round(usd - price24h, 2))) + " " + str(round(usd24change, 2)) + "%" + Style.RESET_ALL)
print("\n")

ada = cg.get_coin_market_chart_by_id(id='cardano', vs_currency='usd', days=1, interval='hourly')
vals = list(ada.values())
price1h = float(str(vals[0][23])[1:-1].split(", ")[1])
price3h = float(str(vals[0][21])[1:-1].split(", ")[1])
price6h = float(str(vals[0][18])[1:-1].split(", ")[1])
price12h = float(str(vals[0][12])[1:-1].split(", ")[1])
price24h = float(str(vals[0][0])[1:-1].split(", ")[1])
price = cg.get_price(ids='cardano', vs_currencies='usd', include_market_cap=True, include_24hr_vol=False, include_24hr_change=True, include_last_updated_at=False)
vals2 = list(price.values())
usd = str(vals2[0])[1:-1].split(", ")
usd24change = str(vals2[0])[1:-1].split(", ")
usd = float(str(usd[0])[7:])
usd24change = float(str(usd24change[2])[18:])
print("Current ADA price: $" + str(round(usd, 2)))
print("1H change $: " + (Fore.RED + "-" + str(round(price1h - usd, 3)) if price1h > usd else Fore.GREEN + str(round(usd - price1h, 3))) + " " + str(round(((usd - price1h) / price1h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("3H change $: " + (Fore.RED + "-" + str(round(price3h - usd, 3)) if price3h > usd else Fore.GREEN + str(round(usd - price3h, 3))) + " " + str(round(((usd - price3h) / price3h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("6H change $: " + (Fore.RED + "-" + str(round(price6h - usd, 3)) if price6h > usd else Fore.GREEN + str(round(usd - price6h, 3))) + " " + str(round(((usd - price6h) / price6h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("12H change $: " + (Fore.RED + "-" + str(round(price12h - usd, 3)) if price12h > usd else Fore.GREEN + str(round(usd - price12h, 3))) + " " + str(round(((usd - price12h) / price12h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("24H change $: " + (Fore.RED + "-" + str(round(price24h - usd, 3)) if price24h > usd else Fore.GREEN + str(round(usd - price24h, 3))) + " " + str(round(usd24change, 2)) + "%" + Style.RESET_ALL)
print("\n")

matic = cg.get_coin_market_chart_by_id(id='matic-network', vs_currency='usd', days=1, interval='hourly')
vals = list(matic.values())
price1h = float(str(vals[0][23])[1:-1].split(", ")[1])
price3h = float(str(vals[0][21])[1:-1].split(", ")[1])
price6h = float(str(vals[0][18])[1:-1].split(", ")[1])
price12h = float(str(vals[0][12])[1:-1].split(", ")[1])
price24h = float(str(vals[0][0])[1:-1].split(", ")[1])
price = cg.get_price(ids='matic-network', vs_currencies='usd', include_market_cap=True, include_24hr_vol=False, include_24hr_change=True, include_last_updated_at=False)
vals2 = list(price.values())
usd = str(vals2[0])[1:-1].split(", ")
usd24change = str(vals2[0])[1:-1].split(", ")
usd = float(str(usd[0])[7:])
usd24change = float(str(usd24change[2])[18:])
print("Current MATIC price: $" + str(round(usd, 2)))
print("1H change $: " + (Fore.RED + "-" + str(round(price1h - usd, 3)) if price1h > usd else Fore.GREEN + str(round(usd - price1h, 3))) + " " + str(round(((usd - price1h) / price1h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("3H change $: " + (Fore.RED + "-" + str(round(price3h - usd, 3)) if price3h > usd else Fore.GREEN + str(round(usd - price3h, 3))) + " " + str(round(((usd - price3h) / price3h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("6H change $: " + (Fore.RED + "-" + str(round(price6h - usd, 3)) if price6h > usd else Fore.GREEN + str(round(usd - price6h, 3))) + " " + str(round(((usd - price6h) / price6h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("12H change $: " + (Fore.RED + "-" + str(round(price12h - usd, 3)) if price12h > usd else Fore.GREEN + str(round(usd - price12h, 3))) + " " + str(round(((usd - price12h) / price12h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("24H change $: " + (Fore.RED + "-" + str(round(price24h - usd, 3)) if price24h > usd else Fore.GREEN + str(round(usd - price24h, 3))) + " " + str(round(usd24change, 2)) + "%" + Style.RESET_ALL)
print("\n")

dot = cg.get_coin_market_chart_by_id(id='polkadot', vs_currency='usd', days=1, interval='hourly')
vals = list(dot.values())
price1h = float(str(vals[0][23])[1:-1].split(", ")[1])
price3h = float(str(vals[0][21])[1:-1].split(", ")[1])
price6h = float(str(vals[0][18])[1:-1].split(", ")[1])
price12h = float(str(vals[0][12])[1:-1].split(", ")[1])
price24h = float(str(vals[0][0])[1:-1].split(", ")[1])
price = cg.get_price(ids='polkadot', vs_currencies='usd', include_market_cap=True, include_24hr_vol=False, include_24hr_change=True, include_last_updated_at=False)
vals2 = list(price.values())
usd = str(vals2[0])[1:-1].split(", ")
usd24change = str(vals2[0])[1:-1].split(", ")
usd = float(str(usd[0])[7:])
usd24change = float(str(usd24change[2])[18:])
print("Current DOT price: $" + str(round(usd, 2)))
print("1H change $: " + (Fore.RED + "-" + str(round(price1h - usd, 2)) if price1h > usd else Fore.GREEN + str(round(usd - price1h, 2))) + " " + str(round(((usd - price1h) / price1h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("3H change $: " + (Fore.RED + "-" + str(round(price3h - usd, 2)) if price3h > usd else Fore.GREEN + str(round(usd - price3h, 2))) + " " + str(round(((usd - price3h) / price3h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("6H change $: " + (Fore.RED + "-" + str(round(price6h - usd, 2)) if price6h > usd else Fore.GREEN + str(round(usd - price6h, 2))) + " " + str(round(((usd - price6h) / price6h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("12H change $: " + (Fore.RED + "-" + str(round(price12h - usd, 2)) if price12h > usd else Fore.GREEN + str(round(usd - price12h, 2))) + " " + str(round(((usd - price12h) / price12h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("24H change $: " + (Fore.RED + "-" + str(round(price24h - usd, 2)) if price24h > usd else Fore.GREEN + str(round(usd - price24h, 2))) + " " + str(round(usd24change, 2)) + "%" + Style.RESET_ALL)
print("\n")

doge = cg.get_coin_market_chart_by_id(id='dogecoin', vs_currency='usd', days=1, interval='hourly')
vals = list(doge.values())
price1h = float(str(vals[0][23])[1:-1].split(", ")[1])
price3h = float(str(vals[0][21])[1:-1].split(", ")[1])
price6h = float(str(vals[0][18])[1:-1].split(", ")[1])
price12h = float(str(vals[0][12])[1:-1].split(", ")[1])
price24h = float(str(vals[0][0])[1:-1].split(", ")[1])
price = cg.get_price(ids='dogecoin', vs_currencies='usd', include_market_cap=True, include_24hr_vol=False, include_24hr_change=True, include_last_updated_at=False)
vals2 = list(price.values())
usd = str(vals2[0])[1:-1].split(", ")
usd24change = str(vals2[0])[1:-1].split(", ")
usd = float(str(usd[0])[7:])
usd24change = float(str(usd24change[2])[18:])
print("Current DOGE price: $" + str(round(usd, 4)))
print("1H change $: " + (Fore.RED + "-" + str(round(price1h - usd, 4)) if price1h > usd else Fore.GREEN + str(round(usd - price1h, 4))) + " " + str(round(((usd - price1h) / price1h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("3H change $: " + (Fore.RED + "-" + str(round(price3h - usd, 4)) if price3h > usd else Fore.GREEN + str(round(usd - price3h, 4))) + " " + str(round(((usd - price3h) / price3h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("6H change $: " + (Fore.RED + "-" + str(round(price6h - usd, 4)) if price6h > usd else Fore.GREEN + str(round(usd - price6h, 4))) + " " + str(round(((usd - price6h) / price6h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("12H change $: " + (Fore.RED + "-" + str(round(price12h - usd, 4)) if price12h > usd else Fore.GREEN + str(round(usd - price12h, 4))) + " " + str(round(((usd - price12h) / price12h) * 100.0, 2)) + "%" + Style.RESET_ALL)
print("24H change $: " + (Fore.RED + "-" + str(round(price24h - usd, 4)) if price24h > usd else Fore.GREEN + str(round(usd - price24h, 4))) + " " + str(round(usd24change, 2)) + "%" + Style.RESET_ALL)

input("\nPress enter to close")
